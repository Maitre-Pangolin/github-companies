{"version":3,"sources":["App.js","index.js"],"names":["Companies","props","className","companies","map","c","company","id","CompanyCard","urlUser","login","useState","user","setUser","useEffect","fetch","then","response","json","data","Card","href","html_url","Image","src","avatar_url","Content","Header","textAlign","Meta","name","Description","bio","extra","Icon","public_repos","location","email","followers","App","setCompanies","city","setCity","searchedCity","setSearchedCity","totalResults","setTotalResults","page","setPage","fetchCompanies","res","items","total_count","catch","error","console","log","size","Input","action","color","icon","onClick","placeholder","onChange","e","target","value","style","marginBottom","Button","labelPosition","disabled","undefined","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af4e228c.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Card, Icon, Image, Button, Input } from \"semantic-ui-react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [companies, setCompanies] = useState([]);\n  const [city, setCity] = useState(\"\");\n  const [searchedCity, setSearchedCity] = useState(\"\");\n  const [totalResults, setTotalResults] = useState(0);\n  const [page, setPage] = useState(1);\n\n  const searchCity = () => {\n    setTotalResults(0);\n    setPage(1);\n    setSearchedCity(city);\n    fetchCompanies();\n  };\n\n  const fetchCompanies = () => {\n    fetch(`https://api.github.com/search/users?q=location:${city} type:org&per_page=30&page=${page}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setCompanies(data.items);\n        setTotalResults(data.total_count);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    if (city) {\n      fetchCompanies();\n    }\n  }, [page]);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>\n          Github C\n          <Icon name=\"github\" size=\"small\" />\n          mpanies\n        </h1>\n      </header>\n      <main>\n        <div>\n          <Input\n            size=\"massive\"\n            action={{ color: \"blue\", icon: \"search\", onClick: searchCity }}\n            placeholder=\"Search a city...\"\n            onChange={(e) => {\n              setCity(e.target.value);\n            }}\n          />\n        </div>\n\n        {totalResults !== 0 ? (\n          <div>\n            <h2 style={{ marginBottom: \"40px\" }}>\n              Found <span style={{ color: \"blue\" }}>{totalResults}</span> companies in {searchedCity}.\n            </h2>\n\n            <Button\n              icon\n              labelPosition=\"left\"\n              disabled={page === 1 ? true : false}\n              onClick={() => {\n                setPage(page - 1);\n              }}\n            >\n              Previous\n              <Icon name=\"left arrow\" />\n            </Button>\n            <Button\n              icon\n              labelPosition=\"right\"\n              disabled={30 * page > totalResults ? true : false}\n              onClick={() => {\n                setPage(page + 1);\n              }}\n            >\n              Next\n              <Icon name=\"right arrow\" />\n            </Button>\n            <Companies companies={companies} />\n          </div>\n        ) : undefined}\n      </main>\n    </div>\n  );\n}\n\nconst Companies = (props) => {\n  return (\n    <div className=\"container\">\n      {props.companies.map((c) => (\n        <CompanyCard key={c.id} company={c} />\n      ))}\n    </div>\n  );\n};\n\nconst CompanyCard = (props) => {\n  const urlUser = `https://github-project-backend.herokuapp.com/user/${props.company.login}`;\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    fetch(urlUser)\n      .then((response) => response.json())\n      .then((data) => setUser(data));\n  }, []);\n\n  if (user)\n    return (\n      <Card href={user.html_url}>\n        <Image src={user.avatar_url} />\n        <Card.Content>\n          <Card.Header textAlign=\"center\">{user.login}</Card.Header>\n          <Card.Meta textAlign=\"center\">{user.name}</Card.Meta>\n          <Card.Description textAlign=\"left\">{user.bio || \"No bio\"}</Card.Description>\n        </Card.Content>\n        <Card.Content extra textAlign=\"left\">\n          <Card.Description>\n            <Icon name=\"github square\" />\n            {user.public_repos} public repositories\n          </Card.Description>\n\n          <Card.Description>\n            <Icon name=\"home\" />\n            {user.location || \"No location\"}\n          </Card.Description>\n          <Card.Description>\n            <Icon name=\"mail\" />\n            {user.email || \"No mail\"}\n          </Card.Description>\n          <Card.Description>\n            <Icon name=\"users\" />\n            {user.followers} follower{user.followers > 1 ? \"s\" : \"\"}\n          </Card.Description>\n        </Card.Content>\n      </Card>\n    );\n  else return undefined;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}